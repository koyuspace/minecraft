{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["year","Date","getFullYear","$","document","ready","parseColor","c","replaceAll","click","e","preventDefault","attr","animate","scrollTop","String","prototype","search","replacement","this","replace","RegExp","get","data","html","hide","App","className","href","id","name","src","height","alt","style","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"wRAKIA,GAAO,IAAIC,MAAOC,cAItBC,IAAEC,UAAUC,OAAM,WAYhB,SAASC,EAAWC,GAClB,OAAOA,EACCC,WAAW,QAAM,WACjBA,WAAW,QAAM,gCACjBA,WAAW,QAAM,gCACjBA,WAAW,QAAM,gCACjBA,WAAW,QAAM,gCACjBA,WAAW,QAAM,gCACjBA,WAAW,QAAM,gCACjBA,WAAW,QAAM,gCACjBA,WAAW,QAAM,gCACjBA,WAAW,QAAM,gCACjBA,WAAW,QAAM,gCACjBA,WAAW,QAAM,gCACjBA,WAAW,QAAM,gCACjBA,WAAW,QAAM,gCACjBA,WAAW,QAAM,gCACjBA,WAAW,QAAM,gCACjBA,WAAW,QAAM,gCA7B3BL,IAAE,mBAAmBM,OAAM,SAASC,GAChCA,EAAEC,iBACFR,IAAE,QAAQS,KAAK,QAAS,IACxBT,IAAE,cAAcS,KAAK,QAAS,+BAC9BT,IAAE,aAAaU,QAAQ,CAACC,UAAW,MAAM,QAAQ,kBAGrDC,OAAOC,UAAUR,WAAa,SAASS,EAAQC,GAE7C,OADaC,KACCC,QAAQ,IAAIC,OAAOJ,EAAQ,KAAMC,IAsBjDf,IAAEmB,IAAI,yCAAyC,SAASC,GAClDA,EAAI,QACNpB,IAAE,WAAWqB,KAAKlB,EAAW,qBAC7BH,IAAE,SAASqB,KAAKD,EAAI,KAAJ,MAChBpB,IAAE,YAAYqB,KAAK,aAAcD,EAAI,KAAS,MAC9CpB,IAAE,YAAYqB,KAAKD,EAAI,QAAJ,OAA0B,IAAIA,EAAI,QAAJ,OAEjDpB,IAAE,WAAWqB,KAAKlB,EAAW,sBAC7BH,IAAE,aAAasB,c,IAKAC,E,4JACnB,WACE,OACE,6BACE,yBAAKC,UAAU,MAAK,mDAAwB,6BAAM,2BAAOA,UAAU,MAAjB,mBAClD,uBAAGC,KAAK,QAAQC,GAAG,kBAAiB,yBAAKF,UAAU,cAAa,uBAAGA,UAAU,0BAE5E,uBAAGG,KAAK,SACT,yBAAKH,UAAU,WACb,yBAAKA,UAAU,YACb,iCACE,iDACA,yBAAKI,IAAI,0FAA0FC,OAAO,MAAMC,IAAI,UACpH,wFAEF,6BAASN,UAAU,QACjB,0DACA,yBAAKI,IAAI,+CAA+CC,OAAO,MAAMC,IAAI,oBACzE,uHAEF,iCACE,4CACA,yBAAKF,IAAI,iFAAiFC,OAAO,MAAMC,IAAI,gBAC3G,kHAIN,yBAAKN,UAAU,QACb,yBAAKA,UAAU,iBACb,0BAAMA,UAAU,YACd,0BAAMO,MAAO,CAAC,MAAS,OAAQ,OAAU,QAASP,UAAU,YAC5D,0BAAMA,UAAU,SAAc,8BAHlC,WAKU,0BAAMA,UAAU,WAAgB,6BACxC,0BAAMA,UAAU,YAAhB,YAAoC,0BAAMA,UAAU,eAGxD,6DAC+B3B,EAD/B,mC,GArCyBmC,IAAMC,WC1CnBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASvC,SAASwC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAczC,MAAM0C,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.62a64622.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\n\nvar year = new Date().getFullYear();\n\n/* eslint dot-location: \"off\" */\n\n$(document).ready(function() {\n  $(\"#scrollToAnchor\").click(function(e) {\n      e.preventDefault();\n      $(\"body\").attr(\"style\", \"\");\n      $(\".jumbotron\").attr(\"style\", \"padding: 0 2rem !important;\");\n      $('html,body').animate({scrollTop: 1024},'slow', function() {});\n  });\n  // eslint-disable-next-line no-extend-native\n  String.prototype.replaceAll = function(search, replacement) {\n    var target = this;\n    return target.replace(new RegExp(search, 'g'), replacement);\n  };\n  function parseColor(c) {\n    return c.\n            replaceAll(\"§r\", \"</span>\").\n            replaceAll(\"§0\", \"<span style=\\\"color:#000000\\\">\").\n            replaceAll(\"§1\", \"<span style=\\\"color:#0000AA\\\">\").\n            replaceAll(\"§2\", \"<span style=\\\"color:#00AA00\\\">\").\n            replaceAll(\"§3\", \"<span style=\\\"color:#00AAAA\\\">\").\n            replaceAll(\"§4\", \"<span style=\\\"color:#AA0000\\\">\").\n            replaceAll(\"§5\", \"<span style=\\\"color:#AA00AA\\\">\").\n            replaceAll(\"§6\", \"<span style=\\\"color:#FFAA00\\\">\").\n            replaceAll(\"§7\", \"<span style=\\\"color:#AAAAAA\\\">\").\n            replaceAll(\"§8\", \"<span style=\\\"color:#555555\\\">\").\n            replaceAll(\"§9\", \"<span style=\\\"color:#5555FF\\\">\").\n            replaceAll(\"§a\", \"<span style=\\\"color:#55FF55\\\">\").\n            replaceAll(\"§b\", \"<span style=\\\"color:#55FFFF\\\">\").\n            replaceAll(\"§c\", \"<span style=\\\"color:#FF5555\\\">\").\n            replaceAll(\"§d\", \"<span style=\\\"color:#FF55FF\\\">\").\n            replaceAll(\"§e\", \"<span style=\\\"color:#FFFF55\\\">\").\n            replaceAll(\"§f\", \"<span style=\\\"color:#FFFFFF\\\">\");\n  }\n  $.get(\"https://api.mcsrvstat.us/2/koyu.space\", function(data) {\n    if (data[\"online\"]) {\n      $(\".online\").html(parseColor(\"§2Online§r\"));\n      $(\".motd\").html(data[\"motd\"][\"html\"]);\n      $(\".favicon\").html(\"<img src=\\\"\"+data[\"icon\"]+\"\\\">\");\n      $(\".players\").html(data[\"players\"][\"online\"]+\"/\"+data[\"players\"][\"max\"]);\n    } else {\n      $(\".online\").html(parseColor(\"§4Offline§r\"));\n      $(\".ononline\").hide();\n    }\n  });\n});\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"bg\"><h1>koyu.space Minecraft<br /><small className=\"ip\">mc.koyu.space</small></h1></div>\n        <a href=\"#next\" id=\"scrollToAnchor\"><div className=\"downbutton\"><i className=\"fas fa-chevron-down\"></i></div></a>\n        {// eslint-disable-next-line\n        }<a name=\"next\"></a>\n        <div className=\"content\">\n          <div className=\"sections\">\n            <section>\n              <h1>We play Minecraft</h1>\n              <img src=\"https://gamepedia.cursecdn.com/minecraft_gamepedia/thumb/8/89/Ghast.png/524px-Ghast.png\" height=\"150\" alt=\"Ghast\" />\n              <p>Should be obvious when we got a Minecraft server, right?</p>\n            </section>\n            <section className=\"swap\">\n              <h1>It is hosted on koyu.space</h1>\n              <img src=\"https://themedata.koyu.space/img/pb-icon.svg\" height=\"150\" alt=\"koyu.space Logo\" />\n              <p>With over 8 years experience in servers we built a Minecraft server from the ground up.</p>\n            </section>\n            <section>\n              <h1>A good game!</h1>\n              <img src=\"https://gamepedia.cursecdn.com/minecraft_gamepedia/2/2d/Plains_Grass_Block.png\" height=\"150\" alt=\"Grass block\" />\n              <p>Minecraft is one of the biggest and most fun games with over 65 million players.</p>\n            </section>\n          </div>\n        </div>\n        <div className=\"mcbg\">\n          <div className=\"ending mcfont\">\n            <span className=\"ononline\">\n              <span style={{\"float\": \"left\", \"margin\": \"auto\"}} className=\"favicon\"></span>\n              <span className=\"motd\"></span><br />\n            </span>\n            Status: <span className=\"online\"></span><br />\n            <span className=\"ononline\">Players: <span className=\"players\"></span></span>\n          </div>\n        </div>\n        <footer>\n          &copy; koyu.space Minecraft {year}. A project by koyu.space.\n        </footer>\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}